{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91809\\\\Desktop\\\\AstroSAT-Visualization-Tool\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Aladin from \"./components/Aladin/Aladin\";\nimport Topbar from \"./components/Topbar/Topbar\";\nimport InitialCard from \"./components/Cards/InitialCard\";\nimport StarfieldAnimation from \"react-starfield-animation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    background: \"black\"\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\nexport default function App() {\n  _s();\n\n  const classes = useStyles(); // function for connecting the API endpoints\n\n  const sendHttpRequest = (method, url, data) => {\n    return fetch(url, {\n      method: method,\n      body: JSON.stringify(data),\n      headers: data ? {\n        \"Content-Type\": \"application/json\"\n      } : {}\n    }).then(response => {\n      if (response.status >= 400) {\n        // !response.ok\n        return response.json().then(errResData => {\n          const error = new Error(\"Something went wrong!\");\n          error.data = errResData;\n          throw error;\n        });\n      }\n\n      return response.json();\n    });\n  }; // function for fetching the cpmplaint database\n\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    sendHttpRequest(\"GET\", \"http://127.0.0.1:8000/isro/getdata/\").then(responseData => {\n      console.log(responseData);\n      setData(responseData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(StarfieldAnimation, {\n      style: {\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: /*#__PURE__*/_jsxDEV(Aladin, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(InitialCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QDDCSAe0uXoJ7FZ+7kOFOZZsHaA=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/91809/Desktop/AstroSAT-Visualization-Tool/src/App.js"],"names":["React","useEffect","useState","makeStyles","Paper","Grid","Aladin","Topbar","InitialCard","StarfieldAnimation","useStyles","theme","root","flexGrow","background","paper","padding","spacing","textAlign","color","palette","text","secondary","App","classes","sendHttpRequest","method","url","data","fetch","body","JSON","stringify","headers","then","response","status","json","errResData","error","Error","setData","responseData","console","log","position","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,UAAU,EAAE;AAFR,GADiC;AAKvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAER,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmBC;AAHrB;AALgC,CAAZ,CAAD,CAA5B;AAYA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAMC,OAAO,GAAGd,SAAS,EAAzB,CAD4B,CAE5B;;AACA,QAAMe,eAAe,GAAG,CAACC,MAAD,EAASC,GAAT,EAAcC,IAAd,KAAuB;AAC7C,WAAOC,KAAK,CAACF,GAAD,EAAM;AAChBD,MAAAA,MAAM,EAAEA,MADQ;AAEhBI,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFU;AAGhBK,MAAAA,OAAO,EAAEL,IAAI,GAAG;AAAE,wBAAgB;AAAlB,OAAH,GAA4C;AAHzC,KAAN,CAAL,CAIJM,IAJI,CAIEC,QAAD,IAAc;AACpB,UAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1B;AACA,eAAOD,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAsBI,UAAD,IAAgB;AAC1C,gBAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,uBAAV,CAAd;AACAD,UAAAA,KAAK,CAACX,IAAN,GAAaU,UAAb;AACA,gBAAMC,KAAN;AACD,SAJM,CAAP;AAKD;;AACD,aAAOJ,QAAQ,CAACE,IAAT,EAAP;AACD,KAdM,CAAP;AAeD,GAhBD,CAH4B,CAqB5B;;;AACA,QAAM,CAACT,IAAD,EAAOa,OAAP,IAAkBvC,QAAQ,CAAC,EAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,eAAe,CAAC,KAAD,EAAQ,qCAAR,CAAf,CAA8DS,IAA9D,CACGQ,YAAD,IAAkB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAD,MAAAA,OAAO,CAACC,YAAD,CAAP;AACD,KAJH;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACZ,IAAxB;AAAA,4BACE,QAAC,kBAAD;AACE,MAAA,KAAK,EAAE;AACLiC,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,KAAK,EAAE,MAFF;AAGLC,QAAAA,MAAM,EAAE;AAHH;AADT;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEnB;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAtDuBL,G;UACNb,S;;;KADMa,G","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Aladin from \"./components/Aladin/Aladin\";\r\nimport Topbar from \"./components/Topbar/Topbar\";\r\nimport InitialCard from \"./components/Cards/InitialCard\";\r\nimport StarfieldAnimation from \"react-starfield-animation\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    background: \"black\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  // function for connecting the API endpoints\r\n  const sendHttpRequest = (method, url, data) => {\r\n    return fetch(url, {\r\n      method: method,\r\n      body: JSON.stringify(data),\r\n      headers: data ? { \"Content-Type\": \"application/json\" } : {},\r\n    }).then((response) => {\r\n      if (response.status >= 400) {\r\n        // !response.ok\r\n        return response.json().then((errResData) => {\r\n          const error = new Error(\"Something went wrong!\");\r\n          error.data = errResData;\r\n          throw error;\r\n        });\r\n      }\r\n      return response.json();\r\n    });\r\n  };\r\n\r\n  // function for fetching the cpmplaint database\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    sendHttpRequest(\"GET\", \"http://127.0.0.1:8000/isro/getdata/\").then(\r\n      (responseData) => {\r\n        console.log(responseData);\r\n        setData(responseData);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <StarfieldAnimation\r\n        style={{\r\n          position: \"absolute\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      />\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Topbar />\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <Aladin data={data} />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <InitialCard />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}